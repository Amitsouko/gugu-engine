***********************************************************************

>  implemented
+  to add
-  to remove

***********************************************************************

Renderer

Camera
    > View
    > Target
    > Window
	+ [Archi] Window clear > render levels from their Camera > render Cameras' UI > render window's UI > render mouse > render console > display()
    + [Archi] Verifier le cablage des UDim sur l'arbo des Levels
	+ [Archi] Element Root UI (pour UI locale à la Camera) ?

Window
	> sf::RenderWindow
	> Renderer
	> Camera Main
    > HandlerEvents
	> Root UI
	> Root Mouse
	> Root Console
	+ UI Layouts ?
	+ UI Dialogs (Popups) ?

Level
    > Element Root
	> vector<LevelLayer>
	> vector<Actor>
	+ flag Active (pour autoriser le Step, l'Update et le rendu)
	
LevelLayer
	> Level
	> Element Root
	+ vector<Actor>	?
	+ flag Active (pour autoriser le Step, l'Update et le rendu)
	+ SceneLayer
	
Scene (Resource)
	+ vector<SceneLayer>
		
SceneLayer (Sub-Resource)
	+ Scene (parent)
	+ Prefab (data)

Prefab (Resource)
	+ vector<Actor>
	+ SceneTree (ElementPrefab)

ElementPrefab (pour pouvoir garder une trace du load, aussi bien pour l'editeur que pour ajouter un controle potentiel de l'arbo des levels)
	+ Prefab Resource
	
World
	> vector<Level> Levels
	+ vector<Actor> (Global Actors) ?

Actor
	> Level
	> Components
		+ Element
	
Element
	> Element Parent
	> vector<Element> Children
	> sf::Transform
	> size
	> int RenderPass
	> ElementInteractions
	+ UIComponent
	- UDims
	
ElementInteractions (HandlerInteractions ?)
	> int InteractionFlags
    > vector<CallbackInfos> Callbacks
	
UIComponent ? (HandlerUI, HandlerDimensions ?)
	+ UPosition
	+ UOrigin
	+ USize
	+ flag keep ratio
